apiVersion: v1
data:
  prometheus.yml: |-
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s

    rule_files:
    - /etc/prometheus/*_rules.yml

    scrape_configs:
    - job_name: 'prometheus'
      static_configs:
      - targets: ['localhost:9090']

    - job_name: 'grafana'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        action: keep
        regex: ^grafana$

    #  Required for: https://grafana.com/grafana/dashboards/315
    - job_name: 'kubernetes-nodes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        insecure_skip_verify: true
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

    - job_name: 'linkerd-controller'
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names: ['linkerd']
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_component
        - __meta_kubernetes_pod_container_port_name
        action: keep
        regex: (.*);admin-http$
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: component

    - job_name: 'linkerd-proxy'
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      - source_labels:
        - __meta_kubernetes_pod_container_name
        - __meta_kubernetes_pod_container_port_name
        - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns
        action: keep
        regex: ^linkerd-proxy;linkerd-admin;linkerd$
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      # special case k8s' "job" label, to not interfere with prometheus' "job"
      # label
      # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =>
      # k8s_job=foo
      - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]
        action: replace
        target_label: k8s_job
      # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job
      # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =>
      # deployment=foo
      - action: labelmap
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # drop all labels that we just made copies of in the previous labelmap
      - action: labeldrop
        regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)
      # __meta_kubernetes_pod_label_linkerd_io_foo=bar =>
      # foo=bar
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"prometheus.yml":"global:\n  scrape_interval: 10s\n  scrape_timeout: 10s\n  evaluation_interval: 10s\n\nrule_files:\n- /etc/prometheus/*_rules.yml\n\nscrape_configs:\n- job_name: 'prometheus'\n  static_configs:\n  - targets: ['localhost:9090']\n\n- job_name: 'grafana'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    action: keep\n    regex: ^grafana$\n\n#  Required for: https://grafana.com/grafana/dashboards/315\n- job_name: 'kubernetes-nodes-cadvisor'\n  scheme: https\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n    insecure_skip_verify: true\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n\n  kubernetes_sd_configs:\n  - role: node\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  - target_label: __address__\n    replacement: kubernetes.default.svc:443\n  - source_labels: [__meta_kubernetes_node_name]\n    regex: (.+)\n    target_label: __metrics_path__\n    replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\n\n- job_name: 'linkerd-controller'\n  kubernetes_sd_configs:\n  - role: pod\n    namespaces:\n      names: ['linkerd']\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_component\n    - __meta_kubernetes_pod_container_port_name\n    action: keep\n    regex: (.*);admin-http$\n  - source_labels: [__meta_kubernetes_pod_container_name]\n    action: replace\n    target_label: component\n\n- job_name: 'linkerd-proxy'\n  kubernetes_sd_configs:\n  - role: pod\n  relabel_configs:\n  - source_labels:\n    - __meta_kubernetes_pod_container_name\n    - __meta_kubernetes_pod_container_port_name\n    - __meta_kubernetes_pod_label_linkerd_io_control_plane_ns\n    action: keep\n    regex: ^linkerd-proxy;linkerd-admin;linkerd$\n  - source_labels: [__meta_kubernetes_namespace]\n    action: replace\n    target_label: namespace\n  - source_labels: [__meta_kubernetes_pod_name]\n    action: replace\n    target_label: pod\n  # special case k8s' \"job\" label, to not interfere with prometheus' \"job\"\n  # label\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_job=foo =\u003e\n  # k8s_job=foo\n  - source_labels: [__meta_kubernetes_pod_label_linkerd_io_proxy_job]\n    action: replace\n    target_label: k8s_job\n  # drop __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_job\n  # __meta_kubernetes_pod_label_linkerd_io_proxy_deployment=foo =\u003e\n  # deployment=foo\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # drop all labels that we just made copies of in the previous labelmap\n  - action: labeldrop\n    regex: __meta_kubernetes_pod_label_linkerd_io_proxy_(.+)\n  # __meta_kubernetes_pod_label_linkerd_io_foo=bar =\u003e\n  # foo=bar\n  - action: labelmap\n    regex: __meta_kubernetes_pod_label_linkerd_io_(.+)"},"kind":"ConfigMap","metadata":{"annotations":{"linkerd.io/created-by":"linkerd/cli stable-2.5.0"},"labels":{"linkerd.io/control-plane-component":"prometheus","linkerd.io/control-plane-ns":"linkerd"},"name":"linkerd-prometheus-config","namespace":"linkerd"}}
    linkerd.io/created-by: linkerd/cli stable-2.5.0
  creationTimestamp: "2019-10-01T17:36:43Z"
  labels:
    linkerd.io/control-plane-component: prometheus
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-prometheus-config
  namespace: linkerd
  resourceVersion: "120537"
  selfLink: /api/v1/namespaces/linkerd/configmaps/linkerd-prometheus-config
  uid: 08fb34fd-e472-11e9-b133-0242ac120002
